name: Test and Deploy
on: [push]

env:
  NODE_ENV: test
  NODE_OPTIONS: --max_old_space_size=4096
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  NEXT_PUBLIC_CDN_URL: ${{ secrets.NEXT_PUBLIC_CDN_URL }}
  NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.RANKLAB_SENTRY_DSN }}
  NEXT_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_STRIPE_PUBLISHABLE_KEY }}
  TEST_STRIPE_ACCOUNT_ID: ${{ secrets.TEST_STRIPE_ACCOUNT_ID }}
  TEST_STRIPE_CUSTOMER_ID: ${{ secrets.TEST_STRIPE_CUSTOMER_ID }}
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/base:14.17.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/packages/ranklab-web/.next/cache
          key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v3
        with:
          node-version: "14.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@ranklab-gaming"
      - uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
      - run: yarn build
      - run: tar -czf /tmp/ranklab-web.tar.gz .
      - name: Save project folder
        uses: actions/upload-artifact@v3
        with:
          name: ranklab-web.tar.gz
          if-no-files-found: error
          path: /tmp/ranklab-web.tar.gz
          retention-days: 1
  chrome-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: install
    container:
      image: cypress/included:9.7.0
      options: >-
        --add-host=ranklab-test:0.0.0.0
        --network-alias=ranklab-test
      volumes:
        - /var/lib/docker/containers:/containers
    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
      ranklab-api:
        env:
          ROCKET_PROFILE: test
          ROCKET_ADDRESS: 0.0.0.0
          RANKLAB_S3_BUCKET: ${{ secrets.RANKLAB_S3_BUCKET }}
          RANKLAB_AWS_ACCESS_KEY_ID: ${{ secrets.RANKLAB_AWS_ACCESS_KEY_ID }}
          RANKLAB_AWS_SECRET_KEY: ${{ secrets.RANKLAB_AWS_SECRET_KEY }}
          RANKLAB_AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
          RANKLAB_SENTRY_DSN: ${{ secrets.RANKLAB_SENTRY_DSN }}
          RANKLAB_S3_BUCKET_QUEUE: ${{ secrets.RANKLAB_S3_BUCKET_QUEUE }}
          RANKLAB_STRIPE_SECRET: ${{ secrets.RANKLAB_STRIPE_SECRET }}
          RANKLAB_STRIPE_DIRECT_WEBHOOKS_QUEUE: ${{ secrets.RANKLAB_STRIPE_DIRECT_WEBHOOKS_QUEUE }}
          RANKLAB_STRIPE_DIRECT_WEBHOOKS_SECRET: ${{ secrets.RANKLAB_STRIPE_DIRECT_WEBHOOKS_SECRET }}
          RANKLAB_STRIPE_CONNECT_WEBHOOKS_QUEUE: ${{ secrets.RANKLAB_STRIPE_CONNECT_WEBHOOKS_QUEUE }}
          RANKLAB_STRIPE_CONNECT_WEBHOOKS_SECRET: ${{ secrets.RANKLAB_STRIPE_CONNECT_WEBHOOKS_SECRET }}
          RANKLAB_STRIPE_PRODUCT_ID: ${{ secrets.RANKLAB_STRIPE_PRODUCT_ID }}
        image: ghcr.io/ranklab-gaming/ranklab-api:latest
        credentials:
          username: $
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download the project folder
        uses: actions/download-artifact@v3
        with:
          name: ranklab-web.tar.gz
      - run: tar -xzf ranklab-web.tar.gz
      - name: Chrome tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: packages/ranklab-web
          record: true
          start: yarn test:start
          wait-on: "http://ranklab-api:8000,http://ranklab-test:3000"
          browser: chrome
          group: "Chrome"
          install: false
      - name: Log server logs
        if: ${{ failure() }}
        run: cat /containers/**/*.log
  deploy:
    runs-on: ubuntu-latest
    needs: [chrome-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-comment: false
