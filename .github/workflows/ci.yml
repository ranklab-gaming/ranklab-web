name: End-to-end tests
on: [push]

env:
  NODE_ENV: test
  NODE_OPTIONS: --max_old_space_size=4096
  DATABASE_URL: postgresql://postgres:postgres@postgres:5432/app_test
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
  CYPRESS_auth0ClientSecret: ${{ secrets.CYPRESS_AUTH0CLIENTSECRET }}
  CYPRESS_auth0CookieSecret: ${{ secrets.CYPRESS_AUTH0COOKIESECRET }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/base:14.17.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/packages/ranklab-web/.next/cache
            ${{ github.workspace }}/node_modules
          key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install
      - run: yarn build
      - run: tar -czf /tmp/ranklab-web.tar.gz .
      - name: Save project folder
        uses: actions/upload-artifact@v2
        with:
          name: ranklab-web.tar.gz
          if-no-files-found: error
          path: /tmp/ranklab-web.tar.gz
          retention-days: 1
  install-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/packages/ranklab-web/.next/cache
            ${{ github.workspace }}/node_modules
          key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install
      - run: yarn build
      - run: mkdir %USERPROFILE\tmp && tar -czf %USERPROFILE%\tmp\ranklab-web.tar.gz .
      - name: Save project folder
        uses: actions/upload-artifact@v2
        with:
          name: ranklab-web.tar.gz
          if-no-files-found: error
          path: ${{ env.USERPROFILE }}/tmp/ranklab-web.tar.gz
          retention-days: 1

  chrome-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: install
    container:
      image: cypress/included:8.7.0
      options: --add-host=ranklab-test.gg:0.0.0.0
      volumes:
        - /var/lib/docker/containers:/containers
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
      ranklab-api:
        env:
          ROCKET_PROFILE: test
          ROCKET_LOG_LEVEL: debug
          ROCKET_ADDRESS: 0.0.0.0
          RANKLAB_AUTH0_DOMAIN: https://ranklab-development.eu.auth0.com/
          RANKLAB_S3_BUCKET: ranklab-dev
          RANKLAB_AWS_ACCESS_KEY_ID: ${{ secrets.RANKLAB_AWS_ACCESS_KEY_ID }}
          RANKLAB_AWS_SECRET_KEY: ${{ secrets.RANKLAB_AWS_SECRET_KEY }}
        image: ghcr.io/ranklab-gaming/ranklab-api:latest
        credentials:
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PASSWORD }}
    steps:
      - name: Download the project folder
        uses: actions/download-artifact@v2
        with:
          name: ranklab-web.tar.gz
      - run: tar -xzf ranklab-web.tar.gz
      - name: Chrome tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: packages/ranklab-web
          record: true
          start: yarn start
          wait-on: "http://ranklab-api:8000,http://ranklab-test.gg:3000"
          browser: chrome
          group: "Chrome"
          install: false
      - name: Log server logs
        if: ${{ failure() }}
        run: cat /containers/**/*.log

  firefox-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: install
    container:
      image: cypress/included:8.7.0
      options: >-
        --user 1001
        --add-host=ranklab-test.gg:0.0.0.0
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
      ranklab-api:
        env:
          ROCKET_PROFILE: test
          ROCKET_ADDRESS: 0.0.0.0
          RANKLAB_AUTH0_DOMAIN: https://ranklab-development.eu.auth0.com/
          RANKLAB_S3_BUCKET: ranklab-dev
          RANKLAB_AWS_ACCESS_KEY_ID: ${{ secrets.RANKLAB_AWS_ACCESS_KEY_ID }}
          RANKLAB_AWS_SECRET_KEY: ${{ secrets.RANKLAB_AWS_SECRET_KEY }}
        image: ghcr.io/ranklab-gaming/ranklab-api:latest
        credentials:
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PASSWORD }}
    steps:
      - name: Download the project folder
        uses: actions/download-artifact@v2
        with:
          name: ranklab-web.tar.gz
      - run: tar -xzf ranklab-web.tar.gz
      - name: Firefox tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: packages/ranklab-web
          record: true
          start: yarn start
          wait-on: "http://ranklab-api:8000,http://ranklab-test.gg:3000"
          browser: firefox
          group: "Firefox"
          install: false
      - name: Save server logs
        if: ${{ failure() }}
        run: tar -czf /tmp/logs.tar.gz /containers/**/*.log
      - name: Log server logs
        if: ${{ failure() }}
        run: cat /containers/**/*.log
  edge-tests:
    timeout-minutes: 40
    runs-on: windows-2019
    needs: install-windows
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
      ranklab-api:
        env:
          ROCKET_PROFILE: test
          ROCKET_ADDRESS: 0.0.0.0
          RANKLAB_AUTH0_DOMAIN: https://ranklab-development.eu.auth0.com/
          RANKLAB_S3_BUCKET: ranklab-dev
          RANKLAB_AWS_ACCESS_KEY_ID: ${{ secrets.RANKLAB_AWS_ACCESS_KEY_ID }}
          RANKLAB_AWS_SECRET_KEY: ${{ secrets.RANKLAB_AWS_SECRET_KEY }}
        image: ghcr.io/ranklab-gaming/ranklab-api:latest
        credentials:
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PASSWORD }}
        ports:
          - 8000:8000
    steps:
      - name: Download the project folder
        uses: actions/download-artifact@v2
        with:
          name: ranklab-web.tar.gz
      - run: tar -xzf ranklab-web.tar.gz
      - run: yarn global add cypress
      - name: Edge tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: packages/ranklab-web
          record: true
          start: yarn start
          wait-on: "http://ranklab-api:8000,http://ranklab-test.gg:3000"
          browser: edge
          group: "Edge"
          install: false
      - name: Check app logs
        if: ${{ failure() }}
        run: docker logs "${{ job.services.ranklab-api.id }}"
